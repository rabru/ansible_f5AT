---
- name: AS3 http setup
  hosts: "{{ target }}"
  gather_facts: false
  vars:
    tenant: "myTenant"
    appName: "httpApp"
    vip: "10.128.10.102"
    memberAddr:
      - "10.10.10.203"
      - "10.10.10.204"

  tasks:

  - name: get auth token
    uri:
      url: https://{{ inventory_hostname }}:{{ server_port }}/mgmt/shared/authn/login
      method: POST
      user: "{{ username }}"
      password: "{{ password }}"
      body: "{
                \"username\":\"{{ username }}\",
                \"password\":\"{{ password }}\",
               \"loginProviderName\": \"local\"
        }"
      force_basic_auth: yes
      status_code: 200
      body_format: json
      validate_certs: no
    register: auth
    delegate_to: localhost


# Add or update Application Service
###################################

  - name: "Update {{ appName }} of tanent {{ tenant }}"
    uri:
      url: https://{{ inventory_hostname }}:{{ server_port }}/mgmt/shared/appsvcs/declare?async=true
      method: POST
      headers:
        X-F5-Auth-Token: "{{auth.json.token.token}}"
      body: "{{ lookup('template', 'http_simple.j2') }}"
      force_basic_auth: no
      status_code: 200,202
      body_format: json
      validate_certs: no
    delegate_to: localhost
    register: task
    when: state == "present"

  - name: Setting Task id
    set_fact:
      task_id: "{{ task.json.id }}"
    when: state == "present"


# Remove Application Service
############################
  - name: Remove all Applications of tenant {{ tenant }}
    uri:
      url: https://{{ inventory_hostname }}:{{ server_port }}/mgmt/shared/appsvcs/declare?async=true
      method: POST
      headers:
        X-F5-Auth-Token: "{{auth.json.token.token}}"
      body: "{{ lookup('template', 'remove_http_simple.j2') }}"
      force_basic_auth: no
      status_code: 200,202
      body_format: json
      validate_certs: no
    delegate_to: localhost
    register: task
    when: state == "absent"

  - name: Setting Task id
    set_fact:
      task_id: "{{ task.json.id }}"
    when: state == "absent"


# Track Result
##################

  - name: debug
    debug:
      var: task_id


  - name: "Track deployment of {{ appName }} of tanent {{ tenant }}"
    uri:
      url: https://{{ inventory_hostname }}:{{ server_port }}/mgmt/shared/appsvcs/task/{{ task_id }}?async=true
      method: GET
      headers:
        X-F5-Auth-Token: "{{auth.json.token.token}}"
      force_basic_auth: no
      status_code: 200,202
      validate_certs: no
    delegate_to: localhost
    register: deplState
    until: deplState.json.results[0].message.find("in progress") == -1
    retries: 10
    delay: 5

  - name: debug
    debug:
      msg:
        - "{{ deplState.json.results[0] }} "


...
